---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-name
spec:
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: app-nginx
  template:
    metadata:
      labels:
        app: app-nginx
        version: v0.1
    spec:
      containers:
        - name: cont-app-nginx
          image: nginx:latest
          resources:
            limits:
              memory: "256Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
          command: ["/bin/bash", "-c"]
          args:
            - |
              mkdir -p /var/www/app && 
              echo "
                server {
                  listen 80;
                  server_name localhost;
                  location / {
                      root   /var/www/app;
                      index  index.html index.htm;
                  }
                }">/etc/nginx/conf.d/default.conf &&
              $(while true; do echo "<h2>Hello from POD hostname: $(hostname)</h2> $(date)">/var/www/app/index.html && sleep 1; done) & \&&
              nginx -g 'daemon off;'
          env:
            - name: TZ
              value: Europe/Warsaw
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 0

---
apiVersion: v1
kind: Service
metadata:
  name: app-nginx-service
spec:
  selector:
    app: app-nginx
  #type:  LoadBalancer | ClusterIP | NodePort
  ports:
    - name: http
      port: 80
      targetPort: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-nginx-ingress
  labels:
    name: myingress
spec:
  ingressClassName: nginx
  rules:
    - host: app.lab.deyv.ml
      #- host: test.lc
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: app-nginx-service
                port:
                  number: 80
